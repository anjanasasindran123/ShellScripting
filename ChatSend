
/*  Author -- Anjana S*/
/* The sending part of the main chatting program */

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <stdio.h>
#include <string.h>

#define MSGSZ     128

/*
 * Declare the message structure.
 */
typedef struct msgbuf {
         long    mtype;
         char    mtext[MSGSZ];
         } message_buf;

main()
{

    int msqid;
    int msgflg = IPC_CREAT | 0666;
    key_t key;

    message_buf sbuf,rbuf;
    size_t buf_length;

    /*
     * Get the message queue id for the
     * "name" 1234, which was created by
     * the server.
     */

    key = 1234;


    if ((msqid = msgget(key, msgflg )) < 0) {
        perror("msgget");
        exit(1);
    }
    else 
     (void) fprintf(stderr,"msgget: msgget succeeded: msqid = %d\n", msqid);
          char msg[MSGSZ];
           gets(msg);
    /*
     * We'll send message type 1
     */
     while(msg!="exit"){
    sbuf.mtype = 1;
     
    (void) strcpy(sbuf.mtext,msg);

    buf_length = strlen(sbuf.mtext) + 1 ;

    /*
     * Send a message.
     */

    if (msgsnd(msqid, &sbuf, buf_length, 0) < 0) {
       printf ("%d, %d, %s, %d\n", msqid, sbuf.mtype, sbuf.mtext, buf_length);
        perror("msgsnd");
        return 1;
    }
 

//recieving part here

  if (msgrcv(msqid, &rbuf, MSGSZ, 2, 0) < 0) {
    
    perror("msgrcv");
    exit(1);
        
    }

    /*
     * Print the answer.
     */
    printf("%s\n", rbuf.mtext);
           gets(msg);
    }
       return 0;
}
